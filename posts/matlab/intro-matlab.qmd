---
title: "Introduction to MATLAB"
subtitle: "PSYC480"
author: "Usman Afzali"
institute: "University of Canterbury"
date: 2024-05-01
format: 
  revealjs:
    theme: simple
    highlight-style: github
    slide-number: c/t
categories: [EEG, EEGLAB, MATLAB]
---

# Outline {background-color="orange"}

## What's on today? {background-color="#346bc8"}

-   Introducing the PSYC480 Blog
-   What is MATLAB?
-   User interface
-   Getting started
-   Basic operations
-   Working with imported data
-   What's next?

## Resources {background-color="yellow"}

-   [PSYC480 Blog](https://usman-afzali.github.io/psyc480-2k24/)
-   [MATLAB for Neuroscience](https://research.ebsco.com/c/g6lqvo/search/details/yksmkozjxf?q=matlab%20for%20neuroscience)
-   [Get Started with MATLAB](https://au.mathworks.com/help/matlab/getting-started-with-matlab.html)

# [PSYC480 Blog](https://usman-afzali.github.io/psyc480-2k24/) {background-color="orange"}

# MATLAB {background-color="orange"}

## Introduction {background-color="#346bc8"}

MATLAB, short for "MATrix LABoratory," is a high-level programming language and interactive environment primarily designed for numerical computation, data analysis, and visualization. It provides a comprehensive set of tools and functions for various domains, including mathematics, engineering, and science. MATLAB allows users to perform matrix manipulations, implement algorithms, create graphical user interfaces (GUIs), and interface with other programming languages and software packages. It is widely used in academia, industry, and research for tasks such as signal processing, image processing, control systems design, and machine learning. (from ChatGPT)

## From the horse's mouth {background-color="yellow"}

[What is MATLAB](https://au.mathworks.com/support/search.html/videos/matlab-overview-61923.html?fq%5B%5D=asset_type_name:video&fq%5B%5D=category:matlab/getting-started-with-matlab&page=1)

## Uses (from ChatGPT) {background-color="#346bc8"}

::: columns
::: {.column width="50%"}
1.  Numerical computation
2.  Data analysis and visualization
3.  Signal processing
4.  Image processing and computer vision
5.  Control systems design and analysis
:::

::: {.column width="50%"}
6.  Machine learning and deep learning
7.  Optimization and mathematical modeling
8.  Simulation of dynamic systems
9.  Financial modeling and analysis
10. Computational biology and bioinformatics
:::
:::

## Uses continued (from ChatGPT) {background-color="#346bc8"}

::: columns
::: {.column width="50%"}
11. Computational fluid dynamics (CFD)
12. Geospatial analysis and mapping
13. Time-series analysis and forecasting
14. Statistical analysis and hypothesis testing
15. Graph theory and network analysis
:::

::: {.column width="50%"}
16. Robotics and autonomous systems
17. Audio processing and speech recognition
18. Cryptography and security analysis
19. Education and teaching (simulations, course materials)
20. Application development (applications, GUIs)
:::
:::

## User Interface {background-color="#346bc8"}

![MATLAB user interface](matlab.png)

## Getting started {background-color="#346bc8"}

![MATLAB user interface](setpath.png)

## Getting started {background-color="#346bc8"}

-   Setting path
-   **Examples:**
-   Setting up EEGLab followed by Microstates
-   Removing paths

# Basic operations {background-color="orange"}

## Arithmetic {background-color="#346bc8"}

```
a = 1
b = 2
c = a + b
d = sqrt (b)
e = a * b
```

-   Use up- and down-arrow keys to recall previous `commands`.
-   Use % for `comments`.

## Using a MATLAB script {background-color="#346bc8"}

-   File: basics.m on `Learn`.
-   Some basics commands:
-   to get help, use help `function name`
-   or use doc `function name`


# Working with imported data {background-color="orange"}


# Toolboxes and Apps {background-color="orange"}

## MATLAB toolboxes {background-color="#346bc8"}

1.    MATLAB Toolboxes are collections of functions, algorithms, and graphical user interfaces (GUIs) that extend the core functionality of MATLAB for specific applications or industries.

2.    Toolboxes provide specialized tools and algorithms for tasks such as signal processing, image processing, control systems design, optimization, and more.

## MATLAB toolboxes .... {background-color="#346bc8"}

3.    Users can purchase or access various Toolboxes to enhance MATLAB's capabilities in specific domains.
Toolboxes can be seamlessly integrated into MATLAB, allowing users to access their functions and tools within the MATLAB environment.

Examples: Signal Processing Toolbox, Image Processing Toolbox, Control System Toolbox, Optimization Toolbox, Statistics and Machine Learning Toolbox.

## MATLAB apps {background-color="#346bc8"}

1.    MATLAB Apps are interactive applications built using MATLAB's App Designer tool, which allows users to create custom graphical user interfaces (GUIs) for their MATLAB code.
2.    Apps provide a user-friendly interface for performing specific tasks or workflows, enabling users to interact with MATLAB functionality without needing to write code.

## MATLAB apps .... {background-color="#346bc8"}

3. Users can design Apps to automate complex processes, visualize data, or streamline repetitive tasks, making MATLAB more accessible to users with varying levels of programming experience.

4. MATLAB Apps can be shared and distributed to other users, allowing for collaboration and deployment of custom tools and workflows.

Examples: Image Viewer App, Signal Analyzer App, Control System Tuner App, Curve Fitting App, Machine Learning App.

# What's next? {background-color="orange"}

# How to learn programming? {background-color="orange"}

# The END {background-color="orange"}
